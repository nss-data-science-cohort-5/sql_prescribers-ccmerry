SELECT *
FROM prescriber
LIMIT 20

SELECT *
FROM prescription
LIMIT 50

SELECT *
FROM drug
LIMIT 20

--1.) 
--a. Which prescriber had the highest total number of claims (totaled over all drugs)? Report the npi and the total number of claims. 
SELECT npi, sum(total_claim_count) AS total_claims
FROM prescription
GROUP BY npi
ORDER BY total_claims DESC
LIMIT 1;

--NPI 1881634483 with 99,707 claims


--b. Repeat the above, but this time report the nppes_provider_first_name, nppes_provider_last_org_name, specialty_description, and the total number of claims.
SELECT scribe.nppes_provider_first_name, scribe.nppes_provider_last_org_name, scribe.specialty_description, sum(script.total_claim_count) AS total_claims
FROM prescription AS script
	INNER JOIN prescriber AS scribe
	ON script.npi = scribe.npi
GROUP BY script.npi, scribe.nppes_provider_first_name, scribe.nppes_provider_last_org_name, specialty_description
ORDER BY total_claims DESC;


--2.) 
--a. Which specialty had the most total number of claims (totaled over all drugs)?
SELECT scribe.specialty_description, sum(script.total_claim_count) AS total_claims
FROM prescription AS script
	INNER JOIN prescriber AS scribe
	ON script.npi = scribe.npi
GROUP BY specialty_description
ORDER BY total_claims DESC
LIMIT 1;

--Family Practice


--b. Which specialty had the most total number of claims for opioids?
SELECT scribe.specialty_description, SUM(total_claim_count) as num_of_opioids
FROM prescriber AS scribe
	LEFT JOIN prescription as script
	ON scribe.npi = script.npi
	WHERE script.drug_name IN
		(SELECT drug.generic_name
		FROM drug
		WHERE drug.opioid_drug_flag = 'Y')
GROUP BY scribe.specialty_description
ORDER BY num_of_opioids DESC;

--Nurse Practitioner


--c. Challenge Question: Are there any specialties that appear in the prescriber table that have no associated prescriptions in the prescription table?
SELECT scribe.specialty_description, sum(script.total_claim_count) AS script_count
FROM prescriber AS scribe
	LEFT JOIN prescription AS script
	ON scribe.npi = script.npi
GROUP BY scribe.specialty_description
HAVING(sum(script.total_claim_count) IS NULL)

--Yes


--d. Difficult Bonus: Do not attempt until you have solved all other problems! 
--For each specialty, report the percentage of total claims by that specialty which are for opioids. 
--Which specialties have a high percentage of opioids?


--3.) 
--a. Which drug (generic_name) had the highest total drug cost?
SELECT drug.generic_name, sum(script.total_drug_cost) as max_cost
FROM prescription AS script
	INNER JOIN drug
	ON drug.generic_name = script.drug_name
	GROUP BY drug.generic_name
ORDER BY max_cost DESC;

--Potassium Chloride

--b. Which drug (generic_name) has the hightest total cost per day? **Bonus: Round your cost per day column to 2 decimal places. Google ROUND to see how this works.
SELECT drug.generic_name, sum(script.total_drug_cost) / sum(total_day_supply) as max_cost
FROM prescription AS script
	JOIN drug
	ON drug.drug_name = script.drug_name
	GROUP BY drug.generic_name
ORDER BY max_cost DESC;

--C1 Esterase Inhibitor

--4.) 
--a. For each drug in the drug table, return the drug name and then a column named 'drug_type' which says 'opioid' for drugs which have opioid_drug_flag = 'Y', 
--says 'antibiotic' for those drugs which have antibiotic_drug_flag = 'Y', and says 'neither' for all other drugs.
SELECT drug_name, 
	CASE WHEN opioid_drug_flag = 'Y' THEN 'opioid'
	WHEN antibiotic_drug_flag = 'Y' THEN 'antibiotic'
	ELSE 'neither' END
	AS drug_type
FROM drug


--b. Building off of the query you wrote for part a, determine whether more was spent (total_drug_cost) on opioids or on antibiotics. Hint: Format the total costs as MONEY for easier comparision.
SELECT SUM(prescription.total_drug_cost),
	CASE WHEN opioid_drug_flag = 'Y' THEN 'opioid'
	WHEN antibiotic_drug_flag = 'Y' THEN 'antibiotic'
	ELSE 'neither' END
	AS drug_type
FROM drug
JOIN prescription
ON prescription.drug_name = drug.drug_name
GROUP BY drug_type

--5.) 
--a. How many CBSAs are in Tennessee? Warning: The cbsa table contains information for all states, not just Tennessee.
SELECT COUNT(DISTINCT cbsaname)
FROM cbsa
LEFT JOIN fips_county
ON cbsa.fipscounty = fips_county.fipscounty
WHERE state = 'TN';

--10

--b. Which cbsa has the largest combined population? Which has the smallest? Report the CBSA name and total population.
SELECT cbsaname, sum(population)
FROM population
INNER JOIN cbsa
ON population.fipscounty = cbsa.fipscounty
GROUP BY cbsaname
ORDER BY sum;

--Highest Nashville-Davidson_Murfressboro_Franklin, Pop:1,830,410
--Lowest: Morristown, Pop: 116,352

--c. What is the largest (in terms of population) county which is not included in a CBSA? Report the county name and population.
SELECT fips_county.county, population
FROM population
LEFT JOIN fips_county
ON fips_county.fipscounty = population.fipscounty
	WHERE population.fipscounty NOT IN
	(SELECT fipscounty
	FROM cbsa)
ORDER BY population DESC;

--Sevier 95,523

--6.) 
--a. Find all rows in the prescription table where total_claims is at least 3000. Report the drug_name and the total_claim_count.
SELECT drug_name, total_claim_count
FROM prescription
WHERE total_claim_count >= 3000;


--b. For each instance that you found in part a, add a column that indicates whether the drug is an opioid.
SELECT prescription.drug_name, prescription.total_claim_count, drug.opioid_drug_flag
FROM prescription
	LEFT JOIN drug
	ON prescription.drug_name = drug.drug_name
WHERE prescription.total_claim_count >= 3000;

--c. Add another column to you answer from the previous part which gives the prescriber first and last name associated with each row.
SELECT prescription.drug_name, prescription.total_claim_count, drug.opioid_drug_flag, prescription.npi
FROM prescription
	LEFT JOIN drug
	ON prescription.drug_name = drug.drug_name
	LEFT JOIN prescriber
	ON prescription. prescriber.npi
WHERE prescription.total_claim_count >= 3000;


--7.) The goal of this exercise is to generate a full list of all pain management specialists in Nashville 
---and the number of claims they had for each opioid. 
--a. First, create a list of all npi/drug_name combinations for pain management specialists 
--(specialty_description = 'Pain Management') in the city of Nashville (nppes_provider_city = 'NASHVILLE'), 
--where the drug is an opioid (opiod_drug_flag = 'Y'). Warning: Double-check your query before running it. 
--You will likely only need to use the prescriber and drug tables.
WITH d_opioid AS (
	SELECT drug_name
	FROM drug
	WHERE opioid_drug_flag = 'Y'
)
SELECT scribe.npi, drug.drug_name
FROM prescriber as scribe
	CROSS JOIN drug
WHERE scribe.specialty_description = 'Pain Management'
AND scribe.nppes_provider_city = 'NASHVILLE'
AND drug.opioid_drug_flag = 'Y'

/*
SELECT scribe.npi, script.drug_name
FROM prescriber AS scribe
	LEFT JOIN prescription AS script
	ON scribe.npi = script.npi
	LEFT JOIN drug
	ON drug.drug_name = script.drug_name
WHERE scribe.specialty_description = 'Pain Management'
AND scribe.nppes_provider_city = 'NASHVILLE'
AND drug.opioid_drug_flag = 'Y';
*/

--b. Next, report the number of claims per drug per prescriber. Be sure to include all combinations, 
--whether or not the prescriber had any claims. You should report the npi, the drug name, 
--and the number of claims (total_claim_count).
WITH d_opioid AS (
	SELECT scribe.npi, drug.drug_name, CONCAT(scribe.npi::text,drug.drug_name) AS id_concat
	FROM prescriber as scribe
		CROSS JOIN drug
	WHERE scribe.specialty_description = 'Pain Management'
	AND scribe.nppes_provider_city = 'NASHVILLE'
	AND drug.opioid_drug_flag = 'Y'
),
combo AS (
	SELECT scribe.npi, script.drug_name, script.total_claim_count, CONCAT(scribe.npi::text,script.drug_name) AS combo_concat
	FROM prescriber AS scribe
		LEFT JOIN prescription AS script
		ON scribe.npi = script.npi
		LEFT JOIN drug
		ON drug.drug_name = script.drug_name
	WHERE scribe.specialty_description = 'Pain Management'
	AND scribe.nppes_provider_city = 'NASHVILLE'
	AND drug.opioid_drug_flag = 'Y'
)
SELECT d_opioid.npi, d_opioid.drug_name, COALESCE(combo.total_claim_count,0) AS total_claim_count
FROM d_opioid
	LEFT JOIN combo
	ON combo.combo_concat = d_opioid.id_concat
ORDER BY total_claim_count;

--c. Finally, if you have not done so already, fill in any missing values for total_claim_count with 0. Hint - Google the COALESCE function.

--PART 2
--1.) How many npi numbers appear in the prescriber table but not in the prescription table?
SELECT COUNT(DISTINCT scribe.npi)
FROM prescriber AS scribe
LEFT JOIN prescription AS script
ON scribe.npi = script.npi;

--2.) 
--a. Find the top five drugs (generic_name) prescribed by prescribers with the specialty of Family Practice.
SELECT scribe.npi
FROM prescriber AS scribe
WHERE specialty_description = 'Family Practice'

SELECT drug_name, generic_name
FROM drug

SELECT script.drug_name, SUM(script.total_claim_count)
FROM prescription AS script
	INNER JOIN drug
	ON script.drug_name = drug.generic_name
GROUP BY script.drug_name

--b. Find the top five drugs (generic_name) prescribed by prescribers with the specialty of Cardiology.

--c. Which drugs appear in the top five prescribed for both Family Practice prescribers and Cardiologists? Combine what you did for parts a and b into a single query to answer this question.

--3.) Your goal in this question is to generate a list of the top prescribers in each of the major 
--metropolitan areas of Tennessee.

--a. First, write a query that finds the top 5 prescribers in Nashville in terms of 
--the total number of claims (total_claim_count) across all drugs. 
--Report the npi, the total number of claims, and include a column showing the city.

--b. Now, report the same for Memphis.

--c. Combine your results from a and b, along with the results for Knoxville and Chattanooga.

--4.)
--Find all counties which had an above-average (for the state) number of overdose deaths in 2017. Report the county name and number of overdose deaths.

--5.)
--a. Write a query that finds the total population of Tennessee.

--b. Build off of the query that you wrote in part a to write a query that returns 
--for each county that county's name, its population, and the percentage of the 
--total population of Tennessee that is contained in that county.